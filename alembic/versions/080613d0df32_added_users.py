"""Added users

Revision ID: 080613d0df32
Revises: 24ba5b52225b
Create Date: 2025-04-20 16:17:12.095353

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '080613d0df32'
down_revision: Union[str, None] = '24ba5b52225b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY', name='weekday').create(op.get_bind())
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('corporate_email', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_users'),
    sa.UniqueConstraint('corporate_email', name='uq_users_email'),
    sa.UniqueConstraint('corporate_email', name=op.f('uq_users_corporate_email'))
    )

    op.add_column('students', sa.Column('user_id', sa.Integer(), nullable=False))
    op.drop_constraint('students_corporate_email_key', 'students', type_='unique')
    op.create_unique_constraint(op.f('uq_students_user_id'), 'students', ['user_id'])
    op.create_foreign_key(op.f('fk_students_user_id_users'), 'students', 'users', ['user_id'], ['id'])
    op.drop_column('students', 'corporate_email')

    op.add_column('teachers', sa.Column('user_id', sa.Integer(), nullable=False))
    op.drop_constraint('teachers_corporate_email_key', 'teachers', type_='unique')
    op.create_unique_constraint(op.f('uq_teachers_user_id'), 'teachers', ['user_id'])
    op.create_foreign_key(op.f('fk_teachers_user_id_users'), 'teachers', 'users', ['user_id'], ['id'])
    op.drop_column('teachers', 'corporate_email')

    op.drop_constraint('attendances_teacher_id_fkey', 'attendances', type_='foreignkey')
    op.drop_constraint('attendances_student_id_fkey', 'attendances', type_='foreignkey')
    op.create_foreign_key(op.f('fk_attendances_teacher_id_teachers'), 'attendances', 'teachers', ['teacher_id'], ['user_id'])
    op.create_foreign_key(op.f('fk_attendances_student_id_students'), 'attendances', 'students', ['student_id'], ['user_id'], ondelete='CASCADE')
    op.drop_constraint('extra_attendances_student_id_fkey', 'extra_attendances', type_='foreignkey')
    op.create_foreign_key(op.f('fk_extra_attendances_student_id_students'), 'extra_attendances', 'students', ['student_id'], ['user_id'], ondelete='CASCADE')
    op.drop_constraint('groups_name_key', 'groups', type_='unique')
    op.create_unique_constraint(op.f('uq_groups_name'), 'groups', ['name'])
    op.alter_column('schedule', 'weekday',
               existing_type=postgresql.ENUM('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY', name='weekday_enum'),
               type_=sa.Enum('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY', name='weekday', create_constraint=True),
               existing_nullable=False,
               postgresql_using='weekday::text::weekday')
    op.drop_constraint('schedule_teacher_id_fkey', 'schedule', type_='foreignkey')
    op.create_foreign_key(op.f('fk_schedule_teacher_id_teachers'), 'schedule', 'teachers', ['teacher_id'], ['user_id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('sections_name_key', 'sections', type_='unique')
    op.create_unique_constraint(op.f('uq_sections_name'), 'sections', ['name'])
    
    op.drop_constraint('teacher_section_teacher_id_fkey', 'teacher_section', type_='foreignkey')
    op.create_foreign_key(op.f('fk_teacher_section_teacher_id_teachers'), 'teacher_section', 'teachers', ['teacher_id'], ['user_id'])
    
    sa.Enum('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY', name='weekday_enum').drop(op.get_bind())
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY', name='weekday_enum').create(op.get_bind())
    op.add_column('teachers', sa.Column('corporate_email', sa.VARCHAR(), autoincrement=False, nullable=False))
    
    op.create_unique_constraint('teachers_corporate_email_key', 'teachers', ['corporate_email'])
    op.drop_constraint(op.f('fk_teacher_section_teacher_id_teachers'), 'teacher_section', type_='foreignkey')
    op.create_foreign_key('teacher_section_teacher_id_fkey', 'teacher_section', 'teachers', ['teacher_id'], ['id'])
    op.add_column('students', sa.Column('corporate_email', sa.VARCHAR(), autoincrement=False, nullable=False))
    
    op.create_unique_constraint('students_corporate_email_key', 'students', ['corporate_email'])
    op.drop_constraint(op.f('uq_sections_name'), 'sections', type_='unique')
    op.create_unique_constraint('sections_name_key', 'sections', ['name'])
    op.drop_constraint(op.f('fk_schedule_teacher_id_teachers'), 'schedule', type_='foreignkey')
    op.create_foreign_key('schedule_teacher_id_fkey', 'schedule', 'teachers', ['teacher_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.alter_column('schedule', 'weekday',
               existing_type=sa.Enum('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY', name='weekday', create_constraint=True),
               type_=postgresql.ENUM('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY', name='weekday_enum'),
               existing_nullable=False,
               postgresql_using='weekday::text::weekday_enum')
    op.drop_constraint(op.f('uq_groups_name'), 'groups', type_='unique')
    op.create_unique_constraint('groups_name_key', 'groups', ['name'])
    op.drop_constraint(op.f('fk_extra_attendances_student_id_students'), 'extra_attendances', type_='foreignkey')
    op.create_foreign_key('extra_attendances_student_id_fkey', 'extra_attendances', 'students', ['student_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('fk_attendances_student_id_students'), 'attendances', type_='foreignkey')
    op.drop_constraint(op.f('fk_attendances_teacher_id_teachers'), 'attendances', type_='foreignkey')
    op.create_foreign_key('attendances_student_id_fkey', 'attendances', 'students', ['student_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('attendances_teacher_id_fkey', 'attendances', 'teachers', ['teacher_id'], ['id'])

    op.drop_constraint(op.f('fk_students_user_id_users'), 'students', type_='foreignkey')
    op.drop_constraint(op.f('uq_students_user_id'), 'students', type_='unique')
    op.drop_column('students', 'user_id')

    op.drop_constraint(op.f('fk_teachers_user_id_users'), 'teachers', type_='foreignkey')
    op.drop_constraint(op.f('uq_teachers_user_id'), 'teachers', type_='unique')
    op.drop_column('teachers', 'user_id')

    op.drop_table('users')
    sa.Enum('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY', name='weekday').drop(op.get_bind())
    # ### end Alembic commands ###
